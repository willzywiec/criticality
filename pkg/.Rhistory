setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
devtools::build('criticality')
devtools::install('criticality', upgrade = 'never')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
# restart R
.rs.restartR()
# initialize environment
if (!is.null(dev.list())) dev.off()
rm(list = ls())
cat('\014')
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
devtools::build('criticality')
devtools::install('criticality', upgrade = 'never')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(magrittr)
if (Sys.info()[1] == 'Darwin') {
ext.dir <- '/Users/will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'/Users/will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'/Users/will/Desktop',
recursive = TRUE) %>% invisible()
} else {
ext.dir <- 'C:/Users/Will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'C:/Users/Will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'C:/Users/Will/Desktop',
recursive = TRUE) %>% invisible()
}
linux.builds <- c(
'debian-clang-devel',
'debian-gcc-devel',
'debian-gcc-devel-nold',
'debian-gcc-patched',
'debian-gcc-release',
'fedora-clang-devel',
'fedora-gcc-devel',
'linux-x86_64-centos-epel',
# 'linux-x86_64-rocker-gcc-san',
'solaris-x86-patched',
'solaris-x86-patched-ods',
'ubuntu-gcc-devel',
'ubuntu-gcc-release',
'ubuntu-rchk')
macos.builds <-c(
'macos-highsierra-release',
'macos-highsierra-release-cran',
'macos-m1-bigsur-release')
windows.builds <- c(
'windows-x86_64-devel',
'windows-x86_64-oldrel',
'windows-x86_64-patched',
'windows-x86_64-release')
all.builds <- c(linux.builds, macos.builds, windows.builds)
# rhub::check('criticality', platform = all.builds, email = 'willzywiec@gmail.com')
# rhub::check('criticality', platform = 'linux-x86_64-rocker-gcc-san', email = 'willzywiec@gmail.com')
# restart R
.rs.restartR()
# initialize environment
if (!is.null(dev.list())) dev.off()
rm(list = ls())
cat('\014')
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
devtools::build('criticality')
devtools::install('criticality', upgrade = 'never')
# tabulate data
dataset <- Tabulate(code = 'mcnp', ext.dir = ext.dir)
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(magrittr)
if (Sys.info()[1] == 'Darwin') {
ext.dir <- '/Users/will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'/Users/will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'/Users/will/Desktop',
recursive = TRUE) %>% invisible()
} else {
ext.dir <- 'C:/Users/Will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'C:/Users/Will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'C:/Users/Will/Desktop',
recursive = TRUE) %>% invisible()
}
linux.builds <- c(
'debian-clang-devel',
'debian-gcc-devel',
'debian-gcc-devel-nold',
'debian-gcc-patched',
'debian-gcc-release',
'fedora-clang-devel',
'fedora-gcc-devel',
'linux-x86_64-centos-epel',
# 'linux-x86_64-rocker-gcc-san',
'solaris-x86-patched',
'solaris-x86-patched-ods',
'ubuntu-gcc-devel',
'ubuntu-gcc-release',
'ubuntu-rchk')
macos.builds <-c(
'macos-highsierra-release',
'macos-highsierra-release-cran',
'macos-m1-bigsur-release')
windows.builds <- c(
'windows-x86_64-devel',
'windows-x86_64-oldrel',
'windows-x86_64-patched',
'windows-x86_64-release')
all.builds <- c(linux.builds, macos.builds, windows.builds)
# rhub::check('criticality', platform = all.builds, email = 'willzywiec@gmail.com')
# rhub::check('criticality', platform = 'linux-x86_64-rocker-gcc-san', email = 'willzywiec@gmail.com')
# tabulate data
dataset <- Tabulate(code = 'mcnp', ext.dir = ext.dir)
# build deep neural network metamodel
metamodel <- NN(
batch.size = 128,
dataset = dataset,
epochs = 100,
ensemble.size = 6,
replot = FALSE,
ext.dir = ext.dir,
training.dir = ext.dir)
# build Bayesian network
bn <- BN(
dist = 'gamma',
facility.data = 'facility.csv',
ext.dir = ext.dir)
# estimate process criticality accident risk
risk <- Risk(
bn = bn,
dist = 'gamma',
facility.data = 'facility.csv',
keff.cutoff = 0.5,
metamodel = metamodel,
risk.pool = 10,
sample.size = 1e+05,
ext.dir = ext.dir)
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
devtools::build('criticality')
devtools::install('criticality', upgrade = 'never')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
# restart R
.rs.restartR()
# initialize environment
if (!is.null(dev.list())) dev.off()
rm(list = ls())
cat('\014')
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
devtools::build('criticality')
devtools::install('criticality', upgrade = 'never')
# restart R
.rs.restartR()
# initialize environment
if (!is.null(dev.list())) dev.off()
rm(list = ls())
cat('\014')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(magrittr)
if (Sys.info()[1] == 'Darwin') {
ext.dir <- '/Users/will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'/Users/will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'/Users/will/Desktop',
recursive = TRUE) %>% invisible()
} else {
ext.dir <- 'C:/Users/Will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'C:/Users/Will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'C:/Users/Will/Desktop',
recursive = TRUE) %>% invisible()
}
linux.builds <- c(
'debian-clang-devel',
'debian-gcc-devel',
'debian-gcc-devel-nold',
'debian-gcc-patched',
'debian-gcc-release',
'fedora-clang-devel',
'fedora-gcc-devel',
'linux-x86_64-centos-epel',
# 'linux-x86_64-rocker-gcc-san',
'solaris-x86-patched',
'solaris-x86-patched-ods',
'ubuntu-gcc-devel',
'ubuntu-gcc-release',
'ubuntu-rchk')
macos.builds <-c(
'macos-highsierra-release',
'macos-highsierra-release-cran',
'macos-m1-bigsur-release')
windows.builds <- c(
'windows-x86_64-devel',
'windows-x86_64-oldrel',
'windows-x86_64-patched',
'windows-x86_64-release')
all.builds <- c(linux.builds, macos.builds, windows.builds)
# rhub::check('criticality', platform = all.builds, email = 'willzywiec@gmail.com')
# rhub::check('criticality', platform = 'linux-x86_64-rocker-gcc-san', email = 'willzywiec@gmail.com')
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
devtools::build('criticality')
devtools::install('criticality', upgrade = 'never')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(magrittr)
if (Sys.info()[1] == 'Darwin') {
ext.dir <- '/Users/will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'/Users/will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'/Users/will/Desktop',
recursive = TRUE) %>% invisible()
} else {
ext.dir <- 'C:/Users/Will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'C:/Users/Will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'C:/Users/Will/Desktop',
recursive = TRUE) %>% invisible()
}
linux.builds <- c(
'debian-clang-devel',
'debian-gcc-devel',
'debian-gcc-devel-nold',
'debian-gcc-patched',
'debian-gcc-release',
'fedora-clang-devel',
'fedora-gcc-devel',
'linux-x86_64-centos-epel',
# 'linux-x86_64-rocker-gcc-san',
'solaris-x86-patched',
'solaris-x86-patched-ods',
'ubuntu-gcc-devel',
'ubuntu-gcc-release',
'ubuntu-rchk')
macos.builds <-c(
'macos-highsierra-release',
'macos-highsierra-release-cran',
'macos-m1-bigsur-release')
windows.builds <- c(
'windows-x86_64-devel',
'windows-x86_64-oldrel',
'windows-x86_64-patched',
'windows-x86_64-release')
all.builds <- c(linux.builds, macos.builds, windows.builds)
rhub::check('criticality', platform = all.builds, email = 'willzywiec@gmail.com')
# restart R
.rs.restartR()
# initialize environment
if (!is.null(dev.list())) dev.off()
rm(list = ls())
cat('\014')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(magrittr)
if (Sys.info()[1] == 'Darwin') {
ext.dir <- '/Users/will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'/Users/will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'/Users/will/Desktop',
recursive = TRUE) %>% invisible()
} else {
ext.dir <- 'C:/Users/Will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'C:/Users/Will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'C:/Users/Will/Desktop',
recursive = TRUE) %>% invisible()
}
linux.builds <- c(
'debian-clang-devel',
'debian-gcc-devel',
'debian-gcc-devel-nold',
'debian-gcc-patched',
'debian-gcc-release',
'fedora-clang-devel',
'fedora-gcc-devel',
'linux-x86_64-centos-epel',
# 'linux-x86_64-rocker-gcc-san',
'solaris-x86-patched',
'solaris-x86-patched-ods',
'ubuntu-gcc-devel',
'ubuntu-gcc-release',
'ubuntu-rchk')
macos.builds <-c(
'macos-highsierra-release',
'macos-highsierra-release-cran',
'macos-m1-bigsur-release')
windows.builds <- c(
'windows-x86_64-devel',
'windows-x86_64-oldrel',
'windows-x86_64-patched',
'windows-x86_64-release')
all.builds <- c(linux.builds, macos.builds, windows.builds)
rhub::check('criticality', platform = all.builds, email = 'willzywiec@gmail.com')
library(devtools)
remove.packages('criticality')
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg/criticality')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg/criticality')
}
devtools::document()
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
devtools::build('criticality')
devtools::install('criticality', upgrade = 'never')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(magrittr)
if (Sys.info()[1] == 'Darwin') {
ext.dir <- '/Users/will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'/Users/will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'/Users/will/Desktop',
recursive = TRUE) %>% invisible()
} else {
ext.dir <- 'C:/Users/Will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'C:/Users/Will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'C:/Users/Will/Desktop',
recursive = TRUE) %>% invisible()
}
linux.builds <- c(
'debian-clang-devel',
'debian-gcc-devel',
'debian-gcc-devel-nold',
'debian-gcc-patched',
'debian-gcc-release',
'fedora-clang-devel',
'fedora-gcc-devel',
'linux-x86_64-centos-epel',
# 'linux-x86_64-rocker-gcc-san',
'solaris-x86-patched',
'solaris-x86-patched-ods',
'ubuntu-gcc-devel',
'ubuntu-gcc-release',
'ubuntu-rchk')
macos.builds <-c(
'macos-highsierra-release',
'macos-highsierra-release-cran',
'macos-m1-bigsur-release')
windows.builds <- c(
'windows-x86_64-devel',
'windows-x86_64-oldrel',
'windows-x86_64-patched',
'windows-x86_64-release')
all.builds <- c(linux.builds, macos.builds, windows.builds)
rhub::check('criticality', platform = all.builds, email = 'willzywiec@gmail.com')
# install criticality
devtools::install_github('willzywiec/criticality/pkg/criticality', dep = FALSE)
library(criticality)
library(magrittr)
if (Sys.info()[1] == 'Darwin') {
ext.dir <- '/Users/will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'/Users/will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'/Users/will/Desktop',
recursive = TRUE) %>% invisible()
} else {
ext.dir <- 'C:/Users/Will/Desktop/extdata'
unlink(ext.dir, recursive = TRUE)
dir.create(ext.dir, recursive = TRUE, showWarnings = FALSE)
file.copy(
'C:/Users/Will/Documents/GitHub/criticality/pkg/criticality/inst/extdata',
'C:/Users/Will/Desktop',
recursive = TRUE) %>% invisible()
}
if (Sys.info()[1] == 'Darwin') {
setwd('/Users/will/Documents/GitHub/criticality/pkg')
} else {
setwd('C:/Users/Will/Documents/GitHub/criticality/pkg')
}
linux.builds <- c(
'debian-clang-devel',
'debian-gcc-devel',
'debian-gcc-devel-nold',
'debian-gcc-patched',
'debian-gcc-release',
'fedora-clang-devel',
'fedora-gcc-devel',
# 'linux-x86_64-rocker-gcc-san',
'solaris-x86-patched',
'solaris-x86-patched-ods',
'ubuntu-gcc-devel',
'ubuntu-gcc-release',
'ubuntu-rchk')
macos.builds <-c(
'macos-highsierra-release',
'macos-highsierra-release-cran',
'macos-m1-bigsur-release')
windows.builds <- c(
'windows-x86_64-devel',
'windows-x86_64-oldrel',
'windows-x86_64-patched',
'windows-x86_64-release')
all.builds <- c(linux.builds, macos.builds, windows.builds)
rhub::check('criticality', platform = all.builds, email = 'willzywiec@gmail.com')
